name: CI

on:
  pull_request:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"  # Updated to match required version
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Check Terraform formatting
        if: steps.fmt.outcome == 'failure'
        run: |
          echo "Terraform files need to be formatted. Run 'terraform fmt -recursive' to fix"
          exit 1

  tflint:
    name: TFLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.0

      - name: Run TFLint
        run: tflint --format=compact

  tfsec:
    name: TFSec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true

  checkov:
    name: Checkov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          quiet: true
          soft_fail: true
          framework: terraform

  json-lint:
    name: JSON Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install JSON lint
        run: npm install -g jsonlint

      - name: Lint JSON files
        run: |
          find . -name "*.json" -type f -exec jsonlint -q {} \;

  dependency-check:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"  # Added version specification for consistency

      - name: Check for provider updates
        run: |
          terraform init -backend=false
          terraform providers